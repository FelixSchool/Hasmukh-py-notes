2 types of databases:
1. relational: Data in tabular forms (like excel)
2. Non relational: data not in tabular forms

Syntaxes for SQL:
1. SELECT Syntax:
    SELECT column1, column2, ...
    FROM table_name;
    or
    SELECT * FROM table_name;

2. The SQL SELECT DISTINCT Statement:
    The SELECT DISTINCT statement is used to return only distinct (different) values.
    syntax:
    SELECT DISTINCT column1, column2, ...
    FROM table_name;

3. The SQL WHERE Clause:
    The WHERE clause is used to filter records.
    WHERE Syntax:
    SELECT column1, column2, ...
    FROM table_name
    WHERE condition;

4. The SQL ORDER BY Keyword:
    The ORDER BY keyword is used to sort the result-set in ascending or descending order.
    ORDER BY Syntax
    SELECT column1, column2, ...
    FROM table_name
    ORDER BY column1, column2, ... ASC|DESC;

5. The SQL INSERT INTO Statement:
    The INSERT INTO statement is used to insert new records in a table.
    INSERT INTO Syntax:
    INSERT INTO table_name (column1, column2, column3, ...)
    VALUES (value1, value2, value3, ...);

6.  SQL NULL Values:
    A field with a NULL value is a field with no value.
    IS NULL Syntax:
    SELECT column_names
    FROM table_name
    WHERE column_name IS NULL;

    IS NOT NULL Syntax:
    SELECT column_names
    FROM table_name
    WHERE column_name IS NOT NULL;

7. The SQL UPDATE Statement:
    The UPDATE statement is used to modify the existing records in a table.
    UPDATE Syntax:
    UPDATE table_name
    SET column1 = value1, column2 = value2, ...
    WHERE condition;
    
8. SQL DELETE Statement:
    The DELETE statement is used to delete existing records in a table.
    DELETE Syntax:
    DELETE FROM table_name WHERE condition;

    Delete All Records:
    DELETE FROM table_name;

9. SQL TOP, LIMIT or ROWNUM Clause:
    The SQL SELECT TOP Clause:
    The SELECT TOP clause is used to specify the number of records to return.
    SQL Server / MS Access Syntax:
    SELECT TOP number|percent column_name(s)
    FROM table_name
    WHERE condition;

10. SQL MIN() and MAX() Functions:
    The MIN() function returns the smallest value of the selected column.
    The MAX() function returns the largest value of the selected column.
    MIN() Syntax:
    SELECT MIN(column_name)
    FROM table_name
    WHERE condition;

    MAX() Syntax:
    SELECT MAX(column_name)
    FROM table_name
    WHERE condition;

11. SQL COUNT(), AVG() and SUM() Functions:
    The COUNT() function returns the number of rows that matches a specified criterion.
    The AVG() function returns the average value of a numeric column.
    The SUM() function returns the total sum of a numeric column.       

    COUNT() Syntax:
    SELECT COUNT(column_name)
    FROM table_name
    WHERE condition;

    AVG() Syntax:
    SELECT AVG(column_name)
    FROM table_name
    WHERE condition;

    SUM() Syntax:
    SELECT SUM(column_name)
    FROM table_name
    WHERE condition;

12. SQL LIKE Operator:
    The LIKE operator is used in a WHERE clause to search for a specified pattern in a column.
    There are two wildcards often used in conjunction with the LIKE operator:
    % - The percent sign represents zero, one, or multiple characters   
    _ - The underscore represents a single character
    LIKE Syntax:
    SELECT column1, column2, ...
    FROM table_name
    WHERE columnN LIKE pattern;

13. SQL Joins:
    A JOIN clause is used to combine rows from two or more tables, based on a related column between them.
    Different Types of SQL JOINs
    
    Here are the different types of the JOINs in SQL:
    (INNER) JOIN: Returns records that have matching values in both tables
    LEFT (OUTER) JOIN: Returns all records from the left table, and the matched records from the right table
    RIGHT (OUTER) JOIN: Returns all records from the right table, and the matched records from the left table
    FULL (OUTER) JOIN: Returns all records when there is a match in either left or right table

14. SQL GROUP BY Statement:
    The GROUP BY statement groups rows that have the same values into summary rows, like "find the number of customers in each country"
    GROUP BY Syntax:
    SELECT column_name(s)
    FROM table_name
    WHERE condition
    GROUP BY column_name(s)
    ORDER BY column_name(s);


